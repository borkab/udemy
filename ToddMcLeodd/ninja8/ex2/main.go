package main

import (
	"encoding/json"
	"fmt"
)

//https://mholt.github.io/json-to-go/
//u can get here a struct automatically generated for your unmarshalling
/*
type AutoGenerated []struct {
	First   string   `json:"First"`
	Last    string   `json:"Last"`
	Age     int      `json:"Age"`
	Sayings []string `json:"Sayings"`
}
*/

func main() {
	s := `[{"First":"James","Last":"Bond","Age":32,"Sayings":["Shaken, not stirred","Youth is no guarantee of innovation","In his majesty's royal service"]},{"First":"Miss","Last":"Moneypenny","Age":27,"Sayings":["James, it is soo good to see you","Would you like me to take care of that for you, James?","I would really prefer to be a secret agent myself."]},{"First":"M","Last":"Hmmmm","Age":54,"Sayings":["Oh, James. You didn't.","Dear God, what has James done now?","Can someone please tell me where James Bond is?"]}]`
	fmt.Println(s)

	//your code goes here

	type person struct {
		First   string
		Last    string
		Age     int
		Sayings []string
	}
	var people []person

	err := json.Unmarshal([]byte(s), &people)
	if err != nil {
		fmt.Printf("error message: %v\t", err)
	}
	fmt.Printf("%+v", people)

	for i, person := range people {
		fmt.Println("Person #", i)
		fmt.Println("\t", person.First, person.Last, person.Age)
		for _, v := range person.Sayings {
			fmt.Println("\t\t", v)
		}
	}
}
